"use strict";!function(i){i(document).ready(function(){i(e.mainCheckbox).on("click",function(){var t=i(this).prop("checked");i(e.checkboxes).prop("checked",t)}),i(e.textInput).on("keyup",function(t){if(t.keyCode==n){var c=i.trim(i(this).val());c&&o({title:c,done:!1},"POST").then(function(t){var n='\n                    <li>\n                        <label>\n                            <input task-id="'.concat(t.id,'" type="checkbox">').concat(c,'\n                        </label>\n                        <span class="delete-task">X</span>\n                    </li>');i(e.fullList).append(n),i(e.textInput).val("")}).catch(function(t){})}}),i("body").on("click",".delete-task",function(){var t=i(i(this).parent()),n=t.find("input").attr("task-id");n&&o({id:n},"DELETE").then(function(){t.remove()}).catch(function(t){console.log(t)})})});var n="13",e={textInput:".mpc-list .add-task input[type='text']",mainCheckbox:".mpc-list .add-task input[type='checkbox']",checkboxes:".mpc-list input[type='checkbox']",fullList:".mpc-list ul"};function o(t,c){return new Promise(function(n,e){i.ajax({data:t,method:c,url:MPCScript.endpoint,cache:!1,dataType:"json",success:function(t){n(t)},error:function(t,n,c){e("".concat(t.status," - ").concat(t.statusText))}})})}}(jQuery);